

    %% ======================= Setup D ========================== %
        % % % Robot Mass = 133 kg / impact at chest 
        % % Dummy H3 impact at the Legs (Tibia / fibia)
        
   % ---------------- Plotting Left Leg Forces ---------------- %
        minTime = 0;
        maxTime = 900;
        nfig = nfig +1;
        plot_range = find(data_raw_H3.test_11.time>minTime,1):...
                        find(data_raw_H3.test_11.time>maxTime,1);      
        
        figName = 'Injury-Tibia-loLFz-H3_Legs-Robot-[133Kg]';
        plegends = {'1.0 [m/s]' '1.5 [m/s]' '3.1 [m/s]'};
        minY = -4000;
        maxY = 700;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.loLFz(plot_range) ...
                                data_raw_H3.test_12.tibia.loLFz(plot_range)...
                                data_raw_H3.test_14.tibia.loLFz(plot_range)...
                                ],...
                            '-',figName,...
                            plegends,...
                            'time [ms]','Lower Tibia Proximal Force [N]',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        
%          % Plotting top lines to each text
%             chesstTests = [1,2,3,16-5,17-5,18-5];
%             for jTest = chesstTests
%                 plot([minTime maxTime],[-Q3.ThCC(jTest) -Q3.ThCC(jTest)],...
%                     '-.','Color','k',...
%                     'LineWidth',1 ...
%                     );
%             end
            % Probability of AIS+3 > 5%
            plot([minTime maxTime],[-H3encapH.TC -H3encapH.TC],...
                '-','Color',ColorsAIS(3,:),...
                'LineWidth',3 ...
                );
            % Probability of AIS+3 > 20%
            plot([minTime maxTime],[-H3encapL.TC -H3encapL.TC],...
                '-','Color',ColorsAIS(4,:),...
                'LineWidth',3 ...
                );
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
            yPose = (-H3encapH.TC )./(AxisPlots(3)-AxisPlots(4)) + 0.06;
            arrowY = [yPose-0.1 yPose]; % [y1 y2]
            arrowX = [0.58 0.68]; % [x1 x2]
            str_ann = ['p(AIS+3)=' , num2str(round(H3encapH.pAIS*100)),'%'];
            annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                       'FontName','TimesNewRoman','FontSize',16);  
        axis(AxisPlots);
        hold on;
        hLegend = legend( ...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'South' );
        
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;
        
        %% ---------------- Plotting Right Leg Forces ---------------- %
        minTime = 0;
        maxTime = 400;
        nfig = nfig +1;
        plot_range = find(data_raw_H3.test_11.time>minTime,1):...
                        find(data_raw_H3.test_11.time>maxTime,1);      
        
        figName = 'Injury-Tibia-loRFz-H3_Legs-Robot-[133Kg]';
        plegends = {'1.0 [m/s]' '1.5 [m/s]' '3.1 [m/s]', '3.1 [m/s]','3.1 [m/s]'};
        minY = -2000;
        maxY = 500;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.loLFz(plot_range) ...
                                data_raw_H3.test_12.tibia.loRFz(plot_range)...
                                data_raw_H3.test_13.tibia.loRFz(plot_range)...
                                data_raw_H3.test_14.tibia.loRFz(plot_range)...
                                data_raw_H3.test_15.tibia.loRFz(plot_range)],...
                            '-',figName,...
                            plegends,...
                            'time [ms]','Lower Tibia Proximal Force [N]',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        
%          % Plotting top lines to each text
%             chesstTests = [1,2,3,16-5,17-5,18-5];
%             for jTest = chesstTests
%                 plot([minTime maxTime],[-Q3.ThCC(jTest) -Q3.ThCC(jTest)],...
%                     '-.','Color','k',...
%                     'LineWidth',1 ...
%                     );
%             end
            % Probability of AIS+3 > 5%
            plot([minTime maxTime],[-H3encapH.TC -H3encapH.TC],...
                '-','Color',ColorsAIS(3,:),...
                'LineWidth',3 ...
                );
            % Probability of AIS+3 > 20%
            plot([minTime maxTime],[-H3encapL.TC -H3encapL.TC],...
                '-','Color',ColorsAIS(4,:),...
                'LineWidth',3 ...
                );
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
            yPose = 1 + (H3encapH.TC )./(AxisPlots(3)-AxisPlots(4)) - 0.03;
            arrowY = [yPose+0.15 yPose]; % [y1 y2]
            arrowX = [0.78 0.85]; % [x1 x2]
            str_ann = ['p(AIS+3)=' , num2str(round(H3encapH.pAIS*100)),'%'];
            annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                       'FontName','TimesNewRoman','FontSize',16);  
        axis(AxisPlots);
        hold on;
        hLegend = legend( ...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'South' );
        
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;