
%% Head Injury (Bone fracture) from Blunt Impact Force
        figName = 'Q3-Impact_Force-Robot-133kg-head-impact'; 
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        minTime = -1;
        maxTime = 20;
        minY = -10;
        maxY = 5000;
        AxisPlots = [minTime maxTime minY maxY];
        nfig = nfig +1;
        ColorsAIS = [50 130 0;% 0-5%
                     220 200 0;% 5-20%
                     255 150 0;% 20-50%
                     190 0 0;% 50-100%
                        ]./255;
        
%         plot_range = 1:find(data_raw.test_5.time>200,1); %length(data_raw.test_5.time) ;
        plot_range5 = find(data_filtered.test_5.time>minTime,1):find(data_filtered.test_5.time>maxTime,1);
        plot_range6 = find(data_filtered.test_6.time>minTime,1):find(data_filtered.test_6.time>maxTime,1);
        plot_range7 = find(data_filtered.test_7.time>minTime,1):find(data_filtered.test_7.time>maxTime,1);
        
        plotNpairedData(nfig,[data_filtered.test_5.time(plot_range5) ...
                                data_filtered.test_6.time(plot_range6) ...
                                data_filtered.test_7.time(plot_range7) ],...
                            [data_filtered.test_5.impact.Fx(plot_range5) ...
                                data_filtered.test_6.impact.Fx(plot_range6)...
                                data_filtered.test_7.impact.Fx(plot_range7)],...
                            '-',figName,plegends,...
                            'time (ms)','Head Impact Force (N)',SAVE_PLOTS,figPath,...
                            figureFormat);
                        hold on;

        % boneFracture.frontal = 4000;
        Xline = boneFracture.frontal;
        plot([minTime maxTime],[Xline Xline],...
                '--','Color','k',...
                'LineWidth',3 ...
                );
        yPose =  (Xline)./((AxisPlots(4)-AxisPlots(3))*0.9) - 0.11;
        arrowY = [yPose-0.05 yPose]; % [y1 y2]
        arrowX = [0.78 0.85]; % [x1 x2]
        str_ann = ['Frontal Bone [' , num2str(round(Xline)),' N]' ];
        annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                   'FontName','TimesNewRoman','FontSize',FontSizes);  
        % boneFracture.mandibleF = 1780;
        Xline = boneFracture.mandibleF;
        plot([minTime maxTime],[Xline Xline],...
                '--','Color','k',...
                'LineWidth',3 ...
                );
        yPose =  (Xline)./((AxisPlots(4)-AxisPlots(3))*0.9) + 0.05;
        arrowY = [yPose+0.05 yPose]; % [y1 y2]
        arrowX = [0.78 0.85]; % [x1 x2]
        str_ann = ['Frontal Mandible [' , num2str(round(Xline)),' N]' ];
        annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                   'FontName','TimesNewRoman','FontSize',FontSizes);  
        % boneFracture.mandibleL = 890;
        Xline = boneFracture.mandibleL;
        plot([minTime maxTime],[Xline Xline],...
                '--','Color','k',...
                'LineWidth',3 ...
                );
        yPose =  (Xline)./((AxisPlots(4)-AxisPlots(3))*0.9) + 0.1;
        arrowY = [yPose+0.05 yPose]; % [y1 y2]
        arrowX = [0.78 0.85]; % [x1 x2]
        str_ann = ['Lateral Mandible [' , num2str(round(Xline)),' N]' ];
        annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                   'FontName','TimesNewRoman','FontSize',FontSizes);  
        axis(AxisPlots);
        hold on;
        hLegend = legend( ...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'NorthEast' );
        set(gcf, 'Position', [10 10 1080 780]);
        
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;
        %%
        nfig = nfig+1;
        figName = 'Q3-Impact_Acc-Robot-133kg-head-impact'; 
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        plotNpairedData(nfig,[data_filtered.test_5.time(plot_range5) ...
                                data_filtered.test_6.time(plot_range6) ...
                                data_filtered.test_7.time(plot_range7) ],...
                            [data_filtered.test_5.impact.Fx(plot_range5)./(2.7*9.81) ...
                                data_filtered.test_6.impact.Fx(plot_range6)./(2.7*9.81)...
                                data_filtered.test_7.impact.Fx(plot_range7)./(2.7*9.81)],...
                            '--',figName,plegends,...
                            'time (ms)','Head Impact Acceleration [g]',SAVE_PLOTS,figPath,...
                            figureFormat);
          hold on;
%         plot_range = find(data_raw_Q3.test_1.time>minX,1):find(data_raw_Q3.test_1.time>maxX,1);
        plot_range5 = find(data_raw_Q3.test_5.time>minTime,1):find(data_raw_Q3.test_5.time>maxTime,1);
        plot_range6 = find(data_raw_Q3.test_6.time>minTime,1):find(data_raw_Q3.test_6.time>maxTime,1);
        plot_range7 = find(data_raw_Q3.test_7.time>minTime,1):find(data_raw_Q3.test_7.time>maxTime,1);

        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range5) ...
                                data_raw_Q3.test_6.time(plot_range6) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range7) ],...
                            [data_raw_Q3.test_5.head.areas(plot_range5) ...
                                data_raw_Q3.test_6.head.areas(plot_range6)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.head.areas(plot_range7)],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Head Impact Acceleration [g]',SAVE_PLOTS,figPath,...
                            figureFormat);
        hold on;
        dim_ann = [0.6 0.3 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = Head data','Dotted lines = Force derived'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16); 
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        hold off;
        
        %% ================ Ploting Compression vs. Force ================ %
        % ======================= Setup A vs. A2  ======================= %
        figName = 'pAIS-Q3-Chest-Robot-Force';
        minX = 0;
        maxX = 30;
        minY = 0;
        maxY = 1500;
        AxisPlots = [minX maxX minY maxY];
        
        nfig = nfig +1;
        minTime=-1;
        maxTime = 100;
        plot_range1 = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plot_range2 = find(data_filtered.test_2.time>minTime,1):find(data_filtered.test_2.time>maxTime,1);
        plot_range3 = find(data_filtered.test_3.time>minTime,1):find(data_filtered.test_3.time>maxTime,1);
        plotNpairedData(nfig,...
                            [data_filtered.test_1.thorax.deflection(plot_range1) ...
                                data_filtered.test_2.thorax.deflection(plot_range2)...
                                data_filtered.test_3.thorax.deflection(plot_range3)],...
                            [data_filtered.test_1.impact.Fx(plot_range1) ...
                                data_filtered.test_2.impact.Fx(plot_range2) ...
                                data_filtered.test_3.impact.Fx(plot_range3) ],...
                            '-',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'Chest Deflection [mm]','Force (N)',false,figPath,...
                            figureFormat,AxisPlots);
            % Probability of AIS+3 > 20% for chest deflection with seatbelt
%             plot([Q3eevcL.CC Q3eevcL.CC],[minY maxY],...
%                 '-','Color',ColorsAIS(4,:),...
%                 'LineWidth',3 ...
%                 );
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
            xPose = (-Q3eevcL.CC)./(AxisPlots(1)-AxisPlots(2)) - 0.082;
            arrowX = [xPose-0.05 xPose]; % [y1 y2]
            arrowY = [0.25 0.3]; % [x1 x2]
%             str_ann = ['p(AIS+3)=' , num2str(round(Q3eevcL.pAIS*100)),'%'];
%             annotation('textarrow',arrowX,arrowY,'String',str_ann,...
%                        'FontName','TimesNewRoman','FontSize',16); 
                        
        hold on;
        plot_range16 = find(data_filtered.test_16.time>minTime,1):find(data_filtered.test_16.time>maxTime,1);
        plot_range17 = find(data_filtered.test_17.time>minTime,1):find(data_filtered.test_17.time>maxTime,1);
        plot_range18 = find(data_filtered.test_18.time>minTime,1):find(data_filtered.test_18.time>maxTime,1);
        plotNpairedData(nfig,...
                            [data_filtered.test_16.thorax.deflection(plot_range16) ...
                                data_filtered.test_17.thorax.deflection(plot_range17)...
                                data_filtered.test_18.thorax.deflection(plot_range18)],...
                            [data_filtered.test_16.impact.Fx(plot_range16) ...
                                data_filtered.test_17.impact.Fx(plot_range17) ...
                                data_filtered.test_18.impact.Fx(plot_range18) ],...
                            '-.',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'Chest Deflection [mm]','Impact Force (N)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.15 0.5 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',20); 
                   
                   
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        hold off;
        
        % ============== Combine plot Deformation Setup A vs. A2 =================== %
        figName = 'pAIS-Q3-Chest-Robot';
        minTime = -1;
        maxTime = 100;
        minY = -30;
        maxY = 0;
        AxisPlots = [minTime maxTime minY maxY];
        nfig = nfig +1;

        plotNpairedData(nfig,[data_filtered.test_1.time(plot_range1) ...
                                data_filtered.test_2.time(plot_range2) ...
                                data_filtered.test_3.time(plot_range3) ],...
                            [-data_filtered.test_1.thorax.deflection(plot_range1) ...
                                -data_filtered.test_2.thorax.deflection(plot_range2)...
                                -data_filtered.test_3.thorax.deflection(plot_range3)],...
                            '-',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
        
        % Plotting top lines to each text
            chesstTests = [1,2,3,16-5,17-5,18-5];
            
            for jTest = chesstTests(1:3)
                eval(['[~,i_max] = max(data_filtered.test_',num2str(jTest),'.thorax.deflection);']);
                t_end = eval(['data_filtered.test_',num2str(jTest),'.time(i_max);']);
                plot([minTime t_end],[-Q3.ThCC(jTest) -Q3.ThCC(jTest)],...
                    '-.','Color','k',...
                    'LineWidth',1 ...
                    );
            end
            % Probability of AIS+3 > 20% (for seat belts)
%             plot([minTime maxTime],[-Q3eevcL.CC -Q3eevcL.CC],...
%                 '-','Color',ColorsAIS(4,:),...
%                 'LineWidth',3 ...
%                 );
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
%             yPose = 1-(-Q3eevcL.CC)./(AxisPlots(3)-AxisPlots(4)) + 0.15;
%             arrowY = [yPose+0.07 yPose]; % [y1 y2]
%             arrowX = [0.76 0.7]; % [x1 x2]
%             str_ann = ['p(AIS+3)=' , num2str(round(Q3eevcL.pAIS*100)),'%'];
%             annotation('textarrow',arrowX,arrowY,'String',str_ann,...
%                        'FontName','TimesNewRoman','FontSize',16);
        axis(AxisPlots);
        hold on;
        plotNpairedData(nfig,[data_filtered.test_16.time(plot_range16) ...
                                 data_filtered.test_17.time(plot_range17) ...
                                 data_filtered.test_18.time(plot_range18) ],...
                            [-data_filtered.test_16.thorax.deflection(plot_range16) ...
                                -data_filtered.test_17.thorax.deflection(plot_range17)...
                                -data_filtered.test_18.thorax.deflection(plot_range18)],...
                            '-.',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);  
        hold on;
        dim_ann = [0.62 0.25 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',20);       
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;
        
        %% ======================= Setup B ========================== %
        % % % Robot Mass = 133 kg / impact at head
        
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        figName = 'pAIS-Q3-NeckForces-Fz-Head-Robot[133kg]';
        minX = -5;
        maxX = 60;
        minY = -2000;
        maxY = 500;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_5.time>200,1); %length(data_raw.test_5.time) ;
        plot_range5 = find(data_raw_Q3.test_5.time>minTime,1):find(data_raw_Q3.test_5.time>maxTime,1);
        plot_range6 = find(data_raw_Q3.test_6.time>minTime,1):find(data_raw_Q3.test_6.time>maxTime,1);
        plot_range7 = find(data_raw_Q3.test_7.time>minTime,1):find(data_raw_Q3.test_7.time>maxTime,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range5) ...
                                data_raw_Q3.test_6.time(plot_range6) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range7) ],...
                            [data_raw_Q3.test_5.neck.Fz(plot_range5) ...
                                data_raw_Q3.test_6.neck.Fz(plot_range6)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.neck.Fz(plot_range7)],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Neck Tension Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots); 
        hold on;
        % Probability of AIS+3 > 20%
        plot([minTime maxTime],[-Q3eevcL.Fz -Q3eevcL.Fz],...
            '-','Color',ColorsAIS(4,:),...
            'LineWidth',3 ...
            );
        axis(AxisPlots);
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
        yPose = abs(-Q3eevcL.Fz-AxisPlots(3))./abs(AxisPlots(3)-AxisPlots(4)) + 0.13;
        arrowY = [yPose+0.07 yPose]; % [y1 y2]
        arrowX = [0.76 0.7]; % [x1 x2]
        str_ann = ['p(AIS+3)=' , num2str(round(Q3eevcL.pAIS*100)),'%'];
        annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                   'FontName','TimesNewRoman','FontSize',16);  
        
        hLegend = legend( ...
              plegends, ...
              'FontName',Fonts,...
              'FontSize', FontSizes,'FontWeight','bold',...
              'orientation', 'horizontal',...
              'location', 'South' );
                             
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),    figureFormat);
        end
        
        hold off;              
                        
        %% ---------------- Neck Moment ----------------- %        
        figName = 'pAIS-Q3-NeckForces-My-Head-Robot[133kg]';
        minX = -5;
        maxX = 60;
        minY = -15;
        maxY = 80;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        plot_range5 = find(data_raw_Q3.test_5.time>minTime,1):find(data_raw_Q3.test_5.time>maxTime,1);
        plot_range6 = find(data_raw_Q3.test_6.time>minTime,1):find(data_raw_Q3.test_6.time>maxTime,1);
        plot_range7 = find(data_raw_Q3.test_7.time>minTime,1):find(data_raw_Q3.test_7.time>maxTime,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range5) ...
                                data_raw_Q3.test_6.time(plot_range6) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range7) ],...
                            [data_raw_Q3.test_5.neck.My(plot_range5) ...
                                data_raw_Q3.test_6.neck.My(plot_range6)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.neck.My(plot_range7)],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Extension Moment [Nm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots); 
                        
                hold on;
        % Probability of AIS+3 > 20%
        plot([minTime maxTime],[Q3eevcL.My Q3eevcL.My],...
            '-','Color',ColorsAIS(4,:),...
            'LineWidth',3 ...
            );
        axis(AxisPlots);
%             dim_ann = [0.75 0.005 0.3 0.3]; % [x y w h]
        yPose = abs(Q3eevcL.My-AxisPlots(3))./abs(AxisPlots(3)-AxisPlots(4)) - 0.07;
        arrowY = [yPose-0.1 yPose]; % [y1 y2]
        arrowX = [0.76 0.7]; % [x1 x2]
        str_ann = ['p(AIS+3)=' , num2str(round(Q3eevcL.pAIS*100)),'%'];
        annotation('textarrow',arrowX,arrowY,'String',str_ann,...
                   'FontName','TimesNewRoman','FontSize',20);  
        
        hLegend = legend( ...
              plegends, ...
              'FontName',Fonts,...
              'FontSize', FontSizes,'FontWeight','bold',...
              'orientation', 'vertical',...
              'location', 'northwest' );
                             
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        hold off;   
        
        
        %% ============== Cumulative Neck Forces ================ %
        % Source: [EuroNcap 2015] Neck Values for Adult Dummy H3 
        % []: Neck values for Child dummy Q3
        time_Fx = [0 25 35 45 90];
        Forces_Fx = [1.9 1.25 1.25 1.1 1.1;
                    2.3 1.3 1.3 1.1 1.1;
                    2.7 1.4 1.4 1.1 1.1;
                    3.1 1.5 1.5 1.1 1.1];
        
        time_Fz = [0 35 60 90];
        Forces_Fz = [2.7 2.3 1.1 1.1; % Higher Performance
                    2.9 2.5 1.1 1.1;
                    3.1 2.7 1.1 1.1;
                    3.3 2.9 1.1 1.1];
                
        % ﻿These values scaled to the Q3 correspond to: [Wismans 2008]
        Q3scaleFactor.NF = 0.41;
        Q3scaleFactor.NM = 0.33;
        
        PicSize = [10 10 780 480];
        Flabels = {'*b', '^b', 'ob','vb'... % 1-4 --> Blue - Chest
                    ,'*k', '^k', 'ok'...    % 5-7 --> Black - Head
                    ,'*m', '^m', 'om'...    % 8-10 --> Magenta - Legs-133kg
                    ,'*c', '^c', 'oc', '<c'... % 16-19 --> Cyan - Chest-60kg
                    };
        Ftcolor= {'b', 'b', 'b','b'...
                    ,'k', 'k', 'k'...
                    ,'m', 'm', 'm'...
                    ,'c', 'c', 'c','c'...
                    };
        str_ann = {'*  1 m/s','\Delta 1.5 m/s','o  3.1 m/s'};
        
        % --------------- Q3 Impact Shear Neck Forces Injury ----------------------%
        nfig = nfig+1;
        figName = 'NeckForces-exceedence-Fx';
        Ylabel = 'Upper Neck Shearing Fx (kN)';
        minX = -5;
        maxX = 100;
        rangeImpact = find(data_raw_Q3.test_7.time>minX,1):...
                            find(data_raw_Q3.test_7.time>maxX,1);
        AxisPlots = [0 90 0 2];
        Q3.maxNFx = plot_NeckCummulative(abs([data_raw_Q3.test_1.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_2.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_3.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_4.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_5.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_6.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_7.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_8.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_9.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_10.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_16.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_17.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_18.neck.Fx(rangeImpact)...
                            data_raw_Q3.test_19.neck.Fx(rangeImpact)...
                            ]./1e3),...
                            Forces_Fx.*Q3scaleFactor.NF,time_Fx,Freq,Flabels,Ftcolor,...
                            nfig,figPath,figName,Ylabel,SAVE_PLOTS,AxisPlots);
        hold on;
        dim_ann = [0.65 0.60 0.3 0.3]; % [x y w h]
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',FontSizes-4,...
                       'BackgroundColor','w'); 

        set(gcf, 'Position', PicSize);
        set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
        if SAVE_PLOTS
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        %% --------------- Q3 Impact Tension Neck Forces Injury ----------------------%
        nfig = nfig +1;
        figName = 'NeckForces-exceedence-Fz';
        Ylabel = 'Upper Neck Tension Fz (kN)';

        AxisPlots = [0 90 0 2];
        Q3.maxNFz = plot_NeckCummulative(abs([data_raw_Q3.test_1.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_2.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_3.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_4.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_5.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_6.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_7.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_8.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_9.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_10.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_16.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_17.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_18.neck.Fz(rangeImpact)...
                            data_raw_Q3.test_19.neck.Fz(rangeImpact)...
                            ]./1e3),...
                            Forces_Fz.*Q3scaleFactor.NF,time_Fz,Freq,Flabels,Ftcolor,...
                            nfig,figPath,figName,Ylabel,SAVE_PLOTS,AxisPlots);
        hold on; 
%         dim_ann = [0.7 0.60 0.3 0.3]; % [x y w h]
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',FontSizes-2,...
                       'BackgroundColor','w');  
        
        set(gcf, 'Position', PicSize);
        set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
        if SAVE_PLOTS
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        %% ------------- pAIS+3 for blunt Impact (Neck)  -----------------%
        nfig = nfig+1;
        typeInjury = 'NFz';
        typeDummy = 'Q3';
        for itest=[1:14]
            [Q3.AIS_NFz_impact(itest,:),Q3.AISlevel_NeckImpact(itest)] = pAIS(Q3.maxNFz(itest),...
                                    typeDummy,typeInjury,...
                                    DRAW_PLOTS,nfig);
        end
