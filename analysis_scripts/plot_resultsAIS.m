% % Computing AIS (Abbreviated Injury Scale from Injury metric (Nij, HIC15, HIC36)
% Author: Diego F. Paez G.
% Date: 15 Feb 2021
%% plot_resultsAIS
% Inputs:
%           criteriaValue: [REQ'D] scalar{double}; Column-wise vector of sampling times
%           AISlevel:  [REQ'D]  {scalar} ; AIS level for plot
% Optional Parameters:           
%           nfig:  [OPTIONAL]  {scalar} ; figure number
%           figPath:  [OPTIONAL]  {char} ; path to save plots
%           SavePlot:  [OPTIONAL]  {logical}    ;    Plot AIS scales and results (DEFAULT = FALSE)
% Examples:

% Copyright 2020, Dr. Diego Paez-G.
%%%
function plot_resultsAIS(Q3,H3,AISlevel,...
                                varargin)

    %%          Parse User Inputs/Outputs                                        
    p = inputParser;
    chkscalar     = @(x) isnumeric(x) && isscalar(x) && (x > 0);
    chknum     = @(x) isnumeric(x) && isscalar(x) && (x > 0);
    chkchar     = @(x) ischar(x);
    chkcell     = @(x) iscell(x);
%     chkstring     = @(x) validateattributes(x ,{'string'});

    % Required Inputs
    addRequired(p,'Q3',@isstruct);
    addRequired(p,'H3',@isstruct);
    addRequired(p,'AISlevel',chkscalar);
    % Optional Inputs
    addOptional(p,'nfig',   1,  chkscalar);
    addOptional(p,'figPath',    'AIS_plot', chkchar);
    addOptional(p,'figName',    '/', chkchar);
    addOptional(p,'figureFormat',    'epsc', chkchar);
    addOptional(p,'SavePlot'   ,false      ,@islogical);
    addOptional(p,'colorCode',1,chknum);
    parse(p,Q3,H3,AISlevel,varargin{:});
    Q3 = p.Results.Q3;
    H3 = p.Results.H3;
    AISlevel = p.Results.AISlevel;
    
    %% =============== Plots setup ===================% 
    AxisPlots = [0 2000 0 1];
    PicSize = [10 10 780 480];

    FaceALphas = 0.18;
    colorAlpha = 0.95;
    FontSizes = 24;
    MarkersSizes = 14;
    LinesWidths = 2.8;
%     figureFormat = 'epsc'; %'png'
    Fonts = 'Times New Roman';
    load('ColorsData');     % colm# , Bcol#, Rcol#, Ocol#, Gcol#
    
    switch (p.Results.colorCode)
        case 1
            nPalet = ["EE6677", "228833", "4477AA", "CCBB44", "66CCEE", "AA3377", "BBBBBB"]; % Tol_bright 
        case 2
            nPalet = ["88CCEE", "44AA99", "117733", "332288", "DDCC77", "999933","CC6677", "882255", "AA4499", "DDDDDD"]; % Tol_muted 
        case 3
            nPalet = ["BBCC33", "AAAA00", "77AADD", "EE8866", "EEDD88", "FFAABB", "99DDFF", "44BB99", "DDDDDD"];% Tol_light 
        case 4
            nPalet = ["E69F00", "56B4E9", "009E73", "F0E442", "0072B2", "D55E00", "CC79A7", "000000" ];% Okabe_Ito 
        otherwise
    % % #From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
            nPalet = ["E69F00", "56B4E9", "009E73", "F0E442", "0072B2", "D55E00", "CC79A7", "000000" ];% Okabe_Ito 
    end
    
    for iColor = 1:length(nPalet)
        colorPalet(iColor,:) = hex2rgb(nPalet(iColor),255)./255;
    end
    
    ColorsAIS = [50 130 0;% 0-5%
             220 200 0;% 5-20%
             255 150 0;% 20-50%
             190 0 0;% 50-100%
                ]./255;
    ColorSummer = [
                    255,255,212
                    254,227,145
                    254,196,79
                    254,153,41
                    217,95,14 %                    153,52,4
                    ]./255;
    ColorDivergent= [
                   57, 92, 107
                   242, 244, 229
                   211, 203, 146
                   221,115,64%239,138,98
                   142,16,30%178,24,43
                    ]./255;
                
	ColorWinter = [
                   57, 92, 107
                   242, 244, 229
                   211, 203, 146
                   160, 169, 117
                   117, 130, 72
                    ]./255;
                
    PlotColor = ColorDivergent;
        
    %% ============ Making Figure ===================%
            figure(p.Results.nfig);
            AxisPlots = [0.7 3.5 0 1];
%             plegends = { 'Child-robot'  'Child-PMV' 'Adult-PMV'};
            plegends = { 'Child thorax'  'Child head' 'Child legs' 'Adult legs'};
            hold on;
            xRange = [0 3.5];
            xplot = [xRange(1) xRange(1), xRange(end), xRange(end)];
         % Probability of AIS+3 < 5%
            plot([0 xRange(end)],[0.05 0.05],...
                '-','Color',PlotColor(1,:),...
                'LineWidth',LinesWidths ...
                );
            yplot = [0 0.05];
            inBetween = [yplot, fliplr(yplot)];
            fill(xplot, inBetween,PlotColor(1,:),...
                    'FaceAlpha',colorAlpha...
                    );
                
        % Probability of AIS+3 < 20%
            plot([0 3.5],[0.2 0.2],...
                '-','Color',PlotColor(3,:),...
                'LineWidth',LinesWidths ...
                );
            yplot = [0.05 0.2];
            inBetween = [yplot, fliplr(yplot)];
            fill(xplot, inBetween,PlotColor(3,:),...
                    'FaceAlpha',colorAlpha...
                    );
        
        % Probability of AIS+3 < 20%
            plot([0 3.5],[0.2 0.2],...
                '-','Color',PlotColor(3,:),...
                'LineWidth',LinesWidths ...
                );
            yplot = [0.05 0.2];
            inBetween = [yplot, fliplr(yplot)];
            fill(xplot, inBetween,PlotColor(3,:),...
                    'FaceAlpha',colorAlpha...
                    );
        
        % Probability of AIS+3 < 50%
            plot([0 3.5],[0.5 0.5],...
                '-','Color',PlotColor(4,:),...
                'LineWidth',LinesWidths ...
                );      
            yplot = [0.2 0.5];
            inBetween = [yplot, fliplr(yplot)];
            fill(xplot, inBetween,PlotColor(4,:),...
                    'FaceAlpha',colorAlpha...
                    );
          % Probability of AIS+3 > 50%    
          
            yplot = [0.5 1.0];
            inBetween = [yplot, fliplr(yplot)];
            fill(xplot, inBetween,PlotColor(5,:),...
                    'FaceAlpha',colorAlpha...
                    );
            
            % For Masses 133kg --> Sqaured plots
%             p133 = plot(Q3.testSpeed(find(Q3.testMass==133))',...
%                         Q3.AIS_ground(find(Q3.testMass==133),AISlevel),...
%                     'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
%                     'Color',colorPalet(2,:)...
%                     );
            
            p133_thorax = plot(Q3.testSpeed(1:4)',...
                        Q3.AIS_ground(1:4,AISlevel),...
                    'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                    'Color',colorPalet(5,:)...
                    );
            p133_head = plot(Q3.testSpeed(5:7)',...
                        Q3.AIS_ground(5:7,AISlevel),...
                    'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                    'Color',colorPalet(5,:)...
                    );
            p133_tibia = plot(Q3.testSpeed(8:10)',...
                        Q3.AIS_ground(8:10,AISlevel),...
                    '^','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                    'Color',colorPalet(5,:)...
                    );
                
            % For Masses 60kg --> circle plots
            hold on; %grid on;
            p60 = plot(Q3.testSpeed(find(Q3.testMass==60))',...
                       Q3.AIS_ground(find(Q3.testMass==60),AISlevel),...
                    'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes,...
                    'Color',colorPalet(2,:)...
                        );
                    
            pAdult = plot(H3.testSpeed(find(H3.testMass==133))',...
                       H3.AIS_ground(find(H3.testMass==133),AISlevel),...
                    'v','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes-3,...
                    'Color',colorPalet(5,:),... 
                    'MarkerFaceColor','k'...
                        );
            hold on;
        
            hLegend = legend([p133_thorax, p133_head, p133_tibia , pAdult],...
                      plegends, ...
                      'FontName',Fonts,...
                      'FontSize', FontSizes,'FontWeight','bold',...
                      'orientation', 'horizontal',...
                      'location', 'northoutside' );
            set(gcf, 'Position', PicSize);
            set(gcf,'PaperPositionMode', 'auto');
            hold on;
            hXLabel=xlabel('Velocity at impact (m/s)');
            hYLabel=ylabel('Head Injury p(AIS3+)');
            set(gca, ...
                  'Box'         , 'off'     , ...
                  'TickDir'     , 'out'     , ... % 
                  'TickLength'  , [.02 .02] , ...
                  'XMinorTick'  , 'off'      , ...
                  'YMinorTick'  , 'off'      , ...
                  'YGrid'       , 'off'      , ...
                  'XColor'      , Gcol5, ...
                  'YColor'      , Gcol5, ...%           'XTick'       , 0:round(m/10):(m+1), ... %           'YTick'       , Ymin:round((Ymax-Ymin)/10):Ymax, ...
                  'LineWidth'   , 1.5         );
            
            set([hXLabel, hYLabel]  , ...
                    'FontName',  Fonts,...
                    'FontSize',  FontSizes,...
                    'color',     [0 0 0]);
            axis(AxisPlots);
%             colormap(PlotColor([1,3,4,5],:))
%             cb = colorbar('location','eastoutside'); 
%             caxis([0 60]) % sets colorbar limits 
%             set(cb,'xtick',[])
%         
        if p.Results.SavePlot
             set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(p.Results.nfig,strcat(p.Results.figPath,p.Results.figName),p.Results.figureFormat);
        end
            
%% ==============  HIC ================= %
        figure(p.Results.nfig + 1);
        AxisPlots = [0.7 3.5 0 3100];
%             plegends = { 'Child-robot'  'Child-PMV' 'Adult-PMV'};
        plegends = { 'Child thorax'  'Child head' 'Child legs' 'Adult legs'};
        hold on;
        xRange = [0 3.5];
        xplot = [xRange(1) xRange(1), xRange(end), xRange(end)];
        
    % For Masses 133kg --> Sqaured plots
%             p133 = plot(Q3.testSpeed(find(Q3.testMass==133))',...
%                         Q3.AIS_ground(find(Q3.testMass==133),AISlevel),...
%                     'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
%                     'Color',colorPalet(2,:)...
%                     );
        
        p133_thorax = plot(Q3.testSpeed(1:4)',...
                    Q3.HIC15_ground(1:4),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_head = plot(Q3.testSpeed(5:7)',...
                    Q3.HIC15_ground(5:7),...
                'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_tibia = plot(Q3.testSpeed(8:10)',...
                    Q3.HIC15_ground(8:10),...
                '^','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );

        % For Masses 60kg --> circle plots
        hold on; %grid on;
        p60 = plot(Q3.testSpeed(find(Q3.testMass==60))',...
                   Q3.HIC15_ground(find(Q3.testMass==60)),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes,...
                'Color',colorPalet(2,:)...
                    );

        pAdult = plot(H3.testSpeed(find(H3.testMass==133))',...
                   H3.HIC15_ground(find(H3.testMass==133)),...
                'v','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes-3,...
                'Color',colorPalet(5,:),... 
                'MarkerFaceColor','k'...
                    );
        hold on;

        hLegend = legend([p133_thorax, p133_head, p133_tibia , pAdult],...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'northoutside' );
        set(gcf, 'Position', PicSize);
        set(gcf,'PaperPositionMode', 'auto');
        hold on;
        hXLabel=xlabel('Velocity at impact (m/s)');
        hYLabel=ylabel('Head Injury Criteria (HIC)');
        set(gca, ...
              'Box'         , 'off'     , ...
              'TickDir'     , 'out'     , ... % 
              'TickLength'  , [.02 .02] , ...
              'XMinorTick'  , 'off'      , ...
              'YMinorTick'  , 'off'      , ...
              'YGrid'       , 'off'      , ...
              'XColor'      , Gcol5, ...
              'YColor'      , Gcol5, ...%           'XTick'       , 0:round(m/10):(m+1), ... %           'YTick'       , Ymin:round((Ymax-Ymin)/10):Ymax, ...
              'LineWidth'   , 1.5         );

        set([hXLabel, hYLabel]  , ...
                'FontName',  Fonts,...
                'FontSize',  FontSizes,...
                'color',     [0 0 0]);
        axis(AxisPlots);
        
        if p.Results.SavePlot
             set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(p.Results.nfig+1,strcat(p.Results.figPath,'HIC_ground'),p.Results.figureFormat);
        end

%% ==============  Peak Accelerations ================= %
        figure(p.Results.nfig + 2);
        AxisPlots = [0.7 3.5 0 610];
%             plegends = { 'Child-robot'  'Child-PMV' 'Adult-PMV'};
        plegends = { 'Child thorax'  'Child head' 'Child legs' 'Adult legs'};
        hold on;
        xRange = [0 3.5];
        xplot = [xRange(1) xRange(1), xRange(end), xRange(end)];
        
    % For Masses 133kg --> Sqaured plots
%             p133 = plot(Q3.testSpeed(find(Q3.testMass==133))',...
%                         Q3.AIS_ground(find(Q3.testMass==133),AISlevel),...
%                     'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
%                     'Color',colorPalet(2,:)...
%                     );
        
        p133_thorax = plot(Q3.testSpeed(1:4)',...
                    Q3.acc_peak_ground(1:4),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_head = plot(Q3.testSpeed(5:7)',...
                    Q3.acc_peak_ground(5:7),...
                'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_tibia = plot(Q3.testSpeed(8:10)',...
                    Q3.acc_peak_ground(8:10),...
                '^','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );

        % For Masses 60kg --> circle plots
        hold on; %grid on;
        p60 = plot(Q3.testSpeed(find(Q3.testMass==60))',...
                   Q3.acc_peak_ground(find(Q3.testMass==60)),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes,...
                'Color',colorPalet(2,:)...
                    );

        pAdult = plot(H3.testSpeed(find(H3.testMass==133))',...
                   H3.acc_peak_ground(find(H3.testMass==133)),...
                'v','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes-3,...
                'Color',colorPalet(5,:),... 
                'MarkerFaceColor','k'...
                    );
        hold on;

        hLegend = legend([p133_thorax, p133_head, p133_tibia , pAdult],...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'northoutside' );
        set(gcf, 'Position', PicSize);
        set(gcf,'PaperPositionMode', 'auto');
        hold on;
        hXLabel=xlabel('Velocity at impact (m/s)');
        hYLabel=ylabel('Head Peak Acceleration (g)');
        set(gca, ...
              'Box'         , 'off'     , ...
              'TickDir'     , 'out'     , ... % 
              'TickLength'  , [.02 .02] , ...
              'XMinorTick'  , 'off'      , ...
              'YMinorTick'  , 'off'      , ...
              'YGrid'       , 'off'      , ...
              'XColor'      , Gcol5, ...
              'YColor'      , Gcol5, ...%           'XTick'       , 0:round(m/10):(m+1), ... %           'YTick'       , Ymin:round((Ymax-Ymin)/10):Ymax, ...
              'LineWidth'   , 1.5         );

        set([hXLabel, hYLabel]  , ...
                'FontName',  Fonts,...
                'FontSize',  FontSizes,...
                'color',     [0 0 0]);
        axis(AxisPlots);
        
        if p.Results.SavePlot
             set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(p.Results.nfig+2,strcat(p.Results.figPath,'PeakAcc_ground'),p.Results.figureFormat);
        end

%% ==============  Mean 3ms Accelerations ================= %
        figure(p.Results.nfig + 3);
        AxisPlots = [0.7 3.5 0 310];
%             plegends = { 'Child-robot'  'Child-PMV' 'Adult-PMV'};
        plegends = { 'Child thorax'  'Child head' 'Child legs' 'Adult legs'};
        hold on;
        xRange = [0 3.5];
        xplot = [xRange(1) xRange(1), xRange(end), xRange(end)];
        
        p133_thorax = plot(Q3.testSpeed(1:4)',...
                    Q3.acc3ms_ground(1:4),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_head = plot(Q3.testSpeed(5:7)',...
                    Q3.acc3ms_ground(5:7),...
                'sq','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );
        p133_tibia = plot(Q3.testSpeed(8:10)',...
                    Q3.acc3ms_ground(8:10),...
                '^','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes+2,...
                'Color',colorPalet(5,:)...
                );

        % For Masses 60kg --> circle plots
        hold on; %grid on;
        p60 = plot(Q3.testSpeed(find(Q3.testMass==60))',...
                   Q3.acc3ms_ground(find(Q3.testMass==60)),...
                'o','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes,...
                'Color',colorPalet(2,:)...
                    );

        pAdult = plot(H3.testSpeed(find(H3.testMass==133))',...
                   H3.acc3ms_ground(find(H3.testMass==133)),...
                'v','lineWidth',LinesWidths-0.5,'markerSize',MarkersSizes-3,...
                'Color',colorPalet(5,:),... 
                'MarkerFaceColor','k'...
                    );
        hold on;

        hLegend = legend([p133_thorax, p133_head, p133_tibia , pAdult],...
                  plegends, ...
                  'FontName',Fonts,...
                  'FontSize', FontSizes,'FontWeight','bold',...
                  'orientation', 'horizontal',...
                  'location', 'northoutside' );
        set(gcf, 'Position', PicSize);
        set(gcf,'PaperPositionMode', 'auto');
        hold on;
        hXLabel=xlabel('Velocity at impact (m/s)');
        hYLabel=ylabel('Acceleration a_{3ms} (g)');
        set(gca, ...
              'Box'         , 'off'     , ...
              'TickDir'     , 'out'     , ... % 
              'TickLength'  , [.02 .02] , ...
              'XMinorTick'  , 'off'      , ...
              'YMinorTick'  , 'off'      , ...
              'YGrid'       , 'off'      , ...
              'XColor'      , Gcol5, ...
              'YColor'      , Gcol5, ...%           'XTick'       , 0:round(m/10):(m+1), ... %           'YTick'       , Ymin:round((Ymax-Ymin)/10):Ymax, ...
              'LineWidth'   , 1.5         );

        set([hXLabel, hYLabel]  , ...
                'FontName',  Fonts,...
                'FontSize',  FontSizes,...
                'color',     [0 0 0]);
        axis(AxisPlots);
        
        if p.Results.SavePlot
             set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(p.Results.nfig+3,strcat(p.Results.figPath,'Acc3ms_ground'),p.Results.figureFormat);
        end
   
end

    