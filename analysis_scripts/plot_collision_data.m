% Plotting Collision Data:
% Main code for reading raw and filter stucture data from
% collision tests with Qolo and dummies Q3 and H3
% In here, the plots show collision forces, accelerations at the head,
% deflection at chest, and forces at the tibia (only for H3)
% 
% Author: Diego F. Paez G.
% Date: 8 Dec 2020

%% Script for extracting and plotting test data
    clearvars; close all; clc; 
    [parentdir,~,~]=fileparts(pwd);
    [maindir,~,~]=fileparts(parentdir);
    addpath(fullfile(maindir,'collision_data','data_raw'));
    % Set here the path to the processed structure of raw data
    addpath(fullfile(parentdir, 'general_functions'));
    
    % Constants from the current dataset
        Freq = 20000;
        Ts = 1/Freq; % Sampling period in (s)
    %% Options    
        DRAW_PLOTS = true;
        SAVE_PLOTS = true;
        SAVE_VIDEO = false;
        READDATA = false;
        nfig=1;
        figPath = fullfile(parentdir, 'Figures/');
        figureFormat = 'png'; %'png' / epsc
    
    %% Load Data-set of Collisions
        load('test_folders.mat')
        load('Q3_raw_collision_struct.mat')
        load('H3_raw_collision_struct.mat')
        load('filtered_collision_struct.mat')
        
        % Data taken from Crash report - manually labeled the start of
        % contact on the ground;
        % [1]'Test_01_Q3-Ribcage' [1.0m/s]
        % [2]'Test_02_Q3-Ribcage' [1.5m/s]
        % [3]'Test_03-2_Q3-Ribcage' [3.1m/s]
        % [4]'Test_03_Q3-Ribcage_FAILED' [3.2m/s]
        % [5]'Test_04_Q3-Head' [1.0m/s]
        % [6]'Test_05_Q3-Head' [1.5m/s]
        % [7]'Test_06_Q3-Head' [3.1m/s]
        % [8]'Test_07_Q3-Legs' [1.0m/s]
        % [9]'Test_08_Q3-Legs' [1.5m/s]
        % [10]'Test_09_Q3-Legs' [3.1m/s]
        %[16]'Test_13_Q3-Ribcage' [1.0m/s]
        %[17]'Test_14_Q3-Ribcage' [1.5m/s]
        %[18]'Test_15-2_Q3-Ribcage' [3.1m/s]
        %[19]'Test_15_Q3-Ribcage_FAILED' [3.0m/s]
    
        groundTimes = [...
                          640; %1
                          596;
                          459;
                          449;
                          653; %5
                          648;  
                          670;
                          1002;
                          1034;
                          1255;  %10
                          1630;
                          1428;
                          0;    %13
                          1654; %14
                          0;    %15
                          685;  %16
                          555;
                          467;
                          489;
                            ];

        % Test reference order from Report
        % % %     'Test_10_H3-Legs'
        % % %     'Test_11_H3-Legs'
        % % %     'Test_12-2_H3-Legs_FAILED'
        % % %     'Test_12-3_H3-Legs'
        % % %     'Test_12_H3-Legs_FAILED'
        h3_groundTimes = [...
                          1630; %11
                          1428; %12
                          0;    %13
                          1654; %14
                          0;    %15
                          ];            


    %% List of Setups from the data recordings:
    % % Each scenario comprises of 3 speeds at contact --> [1.0, 1.5 3.1] (m/s)
    % 4 setups with child dumm Q3 (3-years-old dummy) [1.05m height / 15kg weight]
    % %     Setup A: Dummy Q3 impact at the Chest - [133kg carrier robot]
    % %     Setup A2: Dummy Q3 impact at the Chest - [60kg carrier robot]
    % %     Setup B: Dummy Q3 impact at the Head - [133kg carrier robot]
    % %     Setup C: Dummy Q3 impact at the Legs (Tibia / fibia)  - [133kg carrier robot]

    % 1 setups with adult dumm HIII (50-percentile adult) [1.77m height / 81.5kg weight] 
    % %     Setup D: Dummy H3 impact at the Legs (Tibia / fibia)  - [133kg carrier robot]
	
    
    %% Plotting Impact Forces with Q3 and driver-robot [133 Kg]
    
    

        % ======================= Setup A ========================== %
        % % % Robot Mass = 133 kg / impact at chest
        figName = 'Impact-Q3-Chest-Robot[133Kg]';
        minTime = -10;
        maxTime = 110;
        minY = -10;
        maxY = 1500;
        plegend = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)' '3.2 (m/s)'};
        AxisPlots = [minTime maxTime minY maxY];
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plotNpairedData(nfig,[data_filtered.test_1.time(plot_range) ...
                                data_filtered.test_2.time(plot_range) ...
                                data_filtered.test_3.time(plot_range) ...
                                data_filtered.test_4.time(plot_range) ],...
                            [data_filtered.test_1.impact.Fx(plot_range) ...
                                data_filtered.test_2.impact.Fx(plot_range)...
                                data_filtered.test_3.impact.Fx(plot_range)...
                                data_filtered.test_4.impact.Fx(plot_range)],...
                            '-',figName,plegend,...
                            'time (ms)','Chest Impact Force (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
        if SAVE_PLOTS       
            set(gcf, 'Position', [10 10 680 1080]);
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName,'_V'),figureFormat);
        end

        % ======================= Setup A2 ========================== %
        % % % Robot Mass = 60 kg / impact at chest
        figName = 'Impact-Q3-Chest-Robot[60Kg]';
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plotNpairedData(nfig,[data_filtered.test_16.time(plot_range) ...
                                data_filtered.test_17.time(plot_range) ...
                                data_filtered.test_19.time(plot_range) ...
                                data_filtered.test_18.time(plot_range) ],...
                            [data_filtered.test_16.impact.Fx(plot_range) ...
                                data_filtered.test_17.impact.Fx(plot_range)...
                                data_filtered.test_19.impact.Fx(plot_range)...
                                data_filtered.test_18.impact.Fx(plot_range)],...
                            '-',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.0 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Impact Force (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
        if SAVE_PLOTS       
            set(gcf, 'Position', [10 10 680 1080]);
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName,'_V'),figureFormat);
        end
                        
        % ======================= Setup B ========================== %
        % % % Robot Mass = 133 kg / impact at head
        minTime = -5;
        maxTime = 50;
        minY = -10;
        maxY = 5000;
        AxisPlots = [minTime maxTime minY maxY];
        
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_5.time>200,1); %length(data_raw.test_5.time) ;
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plotNpairedData(nfig,[data_filtered.test_5.time(plot_range) ...
                                data_filtered.test_6.time(plot_range) ...
                                data_filtered.test_7.time(plot_range) ],...
                            [data_filtered.test_5.impact.Fx(plot_range) ...
                                data_filtered.test_6.impact.Fx(plot_range)...
                                data_filtered.test_7.impact.Fx(plot_range)],...
                            '-','Impact-Q3-Head-Robot [133Kg]',{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Head Impact Force (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
%%
        % ======================= Setup C ========================== %
        % % % Robot Mass = 133 kg / impact at legs (tibia-fibia) 
        minTime = -1;
        maxTime = 50;
        minY = -10;
        maxY = 2500;
        AxisPlots = [minTime maxTime minY maxY];
        nfig = nfig +1;
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);

        plotNpairedData(nfig,[data_filtered.test_8.time(plot_range) ...
                                data_filtered.test_9.time(plot_range) ...
                                data_filtered.test_10.time(plot_range) ],...
                            [data_filtered.test_8.impact.Fx(plot_range) ...
                                data_filtered.test_9.impact.Fx(plot_range)...
                                data_filtered.test_10.impact.Fx(plot_range)],...
                            '-','Impact-Q3-Legs-Robot-[133Kg]',{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Legs Impact Force (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
                        
	
%% =============== Plotting Neck Forces for All tests  ================= %

        % ======================= Setup A vs. A2  ======================= %
        % Q3 Impact at the thorax - Condition of robot mass 60 and 133 kg
        figName = 'NeckForces-Fz-Impact-Q3-Chest-Robot[60kg vs 130kg]';
        nfig = nfig +1;
        
        minX = -1;
        maxX = 60;
        minY = 0;
        maxY = 1200;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        for k_test=1:10
            plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        end
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range)...
                                data_raw_Q3.test_3.time(plot_range)],...
                            [data_raw_Q3.test_1.neck.Fz(plot_range) ...
                                data_raw_Q3.test_2.neck.Fz(plot_range) ...
                                data_raw_Q3.test_3.neck.Fz(plot_range) ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Tension/Compression Forces (N)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range)...
                                data_raw_Q3.test_18.time(plot_range)],...
                            [data_raw_Q3.test_16.neck.Fz(plot_range) ...
                                data_raw_Q3.test_17.neck.Fz(plot_range) ...
                                data_raw_Q3.test_18.neck.Fz(plot_range) ],...
                            '--',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Tension/Compression Forces (N)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.4 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
%         annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
%                        'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;

        figName = 'NeckForces-My-Impact-Q3-Chest-Robot[60kg vs 130kg]';
        nfig = nfig +1;

        minY = -20;
        maxY = 20;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range)...
                                data_raw_Q3.test_3.time(plot_range)],...
                            [data_raw_Q3.test_1.neck.My(plot_range) ...
                                data_raw_Q3.test_2.neck.My(plot_range) ...
                                data_raw_Q3.test_3.neck.My(plot_range) ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Extension Moment (Nm)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range)...
                                data_raw_Q3.test_18.time(plot_range)],...
                            [data_raw_Q3.test_16.neck.My(plot_range) ...
                                data_raw_Q3.test_17.neck.My(plot_range) ...
                                data_raw_Q3.test_18.neck.My(plot_range) ],...
                            '--',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Extension Moment (Nm)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.4 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
%         annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
%                        'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        

        % ======================= Setup B ========================== %
        
        % % % Robot Mass = 133 kg / impact at head
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        figName = 'NeckForces-Fz-Q3-Head-Robot[133Kg]';
        minX = -1;
        maxX = 60;
        minY = -1500;
        maxY = 500;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range) ...
                                data_raw_Q3.test_6.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range) ],...
                            [data_raw_Q3.test_5.neck.Fz(plot_range) ...
                                data_raw_Q3.test_6.neck.Fz(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.neck.Fz(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Tension/Comresion Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots); 
        
        figName = 'NeckForces-My-Q3-Head-Robot[133Kg]';
        minX = -1;
        maxX = 60;
        minY = -15;
        maxY = 20;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range) ...
                                data_raw_Q3.test_6.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range) ],...
                            [data_raw_Q3.test_5.neck.My(plot_range) ...
                                data_raw_Q3.test_6.neck.My(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.neck.My(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Extension Moment (Nm)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
                        
        % ======================= Setup C ========================== %
         
        % % % Robot Mass = 133 kg / impact at legs
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        figName = 'NeckForces-Fz-Q3-legs-Robot[133Kg]';
        minX = -1;
        maxX = 200;
        minY = -200;
        maxY = 200;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_8.time>minX,1):...
                            find(data_raw_Q3.test_8.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_8.time(plot_range) ...
                                data_raw_Q3.test_9.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_10.time(plot_range) ],...
                            [data_raw_Q3.test_8.neck.Fz(plot_range) ...
                                data_raw_Q3.test_9.neck.Fz(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_10.neck.Fz(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Tension/Comresion Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
        
        figName = 'NeckForces-My-Q3-Legs-Robot[133Kg]';
        minX = -1;
        maxX = 200;
        minY = -10;
        maxY = 10;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_8.time>minX,1):...
                            find(data_raw_Q3.test_8.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_8.time(plot_range) ...
                                data_raw_Q3.test_9.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_10.time(plot_range) ],...
                            [data_raw_Q3.test_8.neck.My(plot_range) ...
                                data_raw_Q3.test_9.neck.My(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_10.neck.My(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Extension Moment (Nm)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
                                               
%% ============ Plotting Compression Criteria with Q3 ============== %
%    % ======================= Setup A-A2 ========================== %
        % % % Robot Mass = [133 kg] and [60 kg] / impact at chest
        nfig = nfig +1;
        minTime = -20;
        maxTime = 119;
        minY = -30;
        maxY = 0;
        AxisPlots = [minTime maxTime minY maxY];
        % ========================= Setup A ========================= %
        nfig = nfig +1;
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plotNpairedData(nfig,[data_filtered.test_1.time(plot_range) ...
                                data_filtered.test_2.time(plot_range) ...
                                data_filtered.test_3.time(plot_range) ...
                                data_filtered.test_4.time(plot_range) ],...
                            [-data_filtered.test_1.thorax.deflection(plot_range) ...
                                -data_filtered.test_2.thorax.deflection(plot_range)...
                                -data_filtered.test_3.thorax.deflection(plot_range)...
                                -data_filtered.test_4.thorax.deflection(plot_range)],...
                            '-','Deflection Q3-Chest-Robot [133Kg]',{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)' '3.2 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);

        % ========================= Setup A2 =========================== %
        nfig = nfig +1;
        plotNpairedData(nfig,[data_filtered.test_16.time(plot_range) ...
                                 data_filtered.test_17.time(plot_range) ...
                                 data_filtered.test_19.time(plot_range) ...
                                 data_filtered.test_18.time(plot_range) ],...
                            [-data_filtered.test_16.thorax.deflection(plot_range) ...
                                -data_filtered.test_17.thorax.deflection(plot_range)...
                                -data_filtered.test_19.thorax.deflection(plot_range)...
                                -data_filtered.test_18.thorax.deflection(plot_range)],...
                            '--','Deflection Q3-Chest-Robot [60Kg]',{'1.0 (m/s)' '1.5 (m/s)' '3.0 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);  
                        
        % ============== Combine plot Setup A vs. A2 =================== %
        figName = 'Deflection Q3-Chest-Robot-[60-133 kg]';
        minTime = -20;
        maxTime = 119;
        minY = -30;
        maxY = 0;
        AxisPlots = [minTime maxTime minY maxY];
        nfig = nfig +1;
        plot_range = find(data_filtered.test_1.time>minTime,1):find(data_filtered.test_1.time>maxTime,1);
        plotNpairedData(nfig,[data_filtered.test_1.time(plot_range) ...
                                data_filtered.test_2.time(plot_range) ...
                                data_filtered.test_3.time(plot_range) ],...
                            [-data_filtered.test_1.thorax.deflection(plot_range) ...
                                -data_filtered.test_2.thorax.deflection(plot_range)...
                                -data_filtered.test_3.thorax.deflection(plot_range)],...
                            '-',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);

        hold on;
        plotNpairedData(nfig,[data_filtered.test_16.time(plot_range) ...
                                 data_filtered.test_17.time(plot_range) ...
                                 data_filtered.test_18.time(plot_range) ],...
                            [-data_filtered.test_16.thorax.deflection(plot_range) ...
                                -data_filtered.test_17.thorax.deflection(plot_range)...
                                -data_filtered.test_18.thorax.deflection(plot_range)],...
                            '--',figName,{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Chest Deflection [mm]',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);  
        hold on;
        
        dim_ann = [0.6 0.2 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16);       
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;

        % ================ Ploting Compression vs. Force ================ %
        % ======================= Setup A vs. A2  ======================= %
        minX = 0;
        maxX = 30;
        minY = 0;
        maxY = 1500;
        AxisPlots = [minX maxX minY maxY];
        
        nfig = nfig +1;
        plot_range = find(data_filtered.test_1.time>-5,1):find(data_filtered.test_1.time>100,1);
        plotNpairedData(nfig,...
                            [data_filtered.test_1.thorax.deflection(plot_range) ...
                                data_filtered.test_2.thorax.deflection(plot_range)...
                                data_filtered.test_3.thorax.deflection(plot_range)],...
                            [data_filtered.test_1.impact.Fx(plot_range) ...
                                data_filtered.test_2.impact.Fx(plot_range) ...
                                data_filtered.test_3.impact.Fx(plot_range) ],...
                            '-','Deflection-Force ratio Q3-Chest',{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'Chest Deflection [mm]','Force (N)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_filtered.test_16.thorax.deflection(plot_range) ...
                                data_filtered.test_17.thorax.deflection(plot_range)...
                                data_filtered.test_18.thorax.deflection(plot_range)],...
                            [data_filtered.test_16.impact.Fx(plot_range) ...
                                data_filtered.test_17.impact.Fx(plot_range) ...
                                data_filtered.test_18.impact.Fx(plot_range) ],...
                            '--','Deflection-Force ratio Q3-Chest',{'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'Chest Deflection [mm]','Force (N)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.1 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,'Deflection-Force ratio Q3-Chest'),figureFormat);
        end
        
        hold off;

%% ================= Plotting Accelerations with Q3 =====================%
    % ======================= Setup A ========================== %
        % % % Robot Mass = 133 kg / impact at chest
        minX = -20;
        maxX = 150;
        minY = 0;
        maxY = 40;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Impact-Q3-Chest-Robot[133Kg]';
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_1.time>minX,1):find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_3.time(plot_range) ],...
                            [data_raw_Q3.test_1.head.areas(plot_range) ...
                                data_raw_Q3.test_2.head.areas(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_3.head.areas(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
    
        % ======================= Setup A2 ========================== %
        % % % Robot Mass = 60 kg / impact at chest
        figName = 'Head-Acceleration-Impact-Q3-Chest-Robot[60Kg]';
        nfig = nfig +1;

%         plot_range = find(data_raw_Q3.test_1.time>minX,1):find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range) ...%                                 data_raw.test_18.time(plot_range) ...
                                data_raw_Q3.test_18.time(plot_range) ],...
                            [data_raw_Q3.test_16.head.areas(plot_range) ...
                                data_raw_Q3.test_17.head.areas(plot_range)...%                                 data_raw.test_18.head.ax(plot_range)...
                                data_raw_Q3.test_18.head.areas(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);

        % ======================= Setup A vs. A2  ======================= %
        figName = 'Head-Acceleration-Impact-Q3-Chest-Robot[60kgvs130kg]';
        
        nfig = nfig +1;
%         plot_range = find(data_raw_Q3.test_1.time>minX,1):find(data_raw_Q3.test_1.time>maxX,1);00,1);
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range)...
                                data_raw_Q3.test_3.time(plot_range)],...
                            [data_raw_Q3.test_1.head.areas(plot_range) ...
                                data_raw_Q3.test_2.head.areas(plot_range) ...
                                data_raw_Q3.test_3.head.areas(plot_range) ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range)...
                                data_raw_Q3.test_18.time(plot_range)],...
                            [data_raw_Q3.test_16.head.areas(plot_range) ...
                                data_raw_Q3.test_17.head.areas(plot_range) ...
                                data_raw_Q3.test_18.head.areas(plot_range) ],...
                            '--',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.1 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        hold off;
        minY = 0;
        maxY = 30;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Chest-Acceleration-Impact-Q3-Chest-Robot[60kg vs 130kg]';
        nfig = nfig +1;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range)...
                                data_raw_Q3.test_3.time(plot_range)],...
                            [data_raw_Q3.test_1.thorax.areas(plot_range) ...
                                data_raw_Q3.test_2.thorax.areas(plot_range) ...
                                data_raw_Q3.test_3.thorax.areas(plot_range) ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range)...
                                data_raw_Q3.test_18.time(plot_range)],...
                            [data_raw_Q3.test_16.thorax.areas(plot_range) ...
                                data_raw_Q3.test_17.thorax.areas(plot_range) ...
                                data_raw_Q3.test_18.thorax.areas(plot_range) ],...
                            '-.',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.1 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        
        hold off;
        minY = 0;
        maxY = 15;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Pelvis-Acceleration-Impact-Q3-Chest-Robot[60kg vs 130kg]';
        nfig = nfig +1;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_1.time(plot_range) ...
                                data_raw_Q3.test_2.time(plot_range)...
                                data_raw_Q3.test_3.time(plot_range)],...
                            [data_raw_Q3.test_1.pelvis.areas(plot_range) ...
                                data_raw_Q3.test_2.pelvis.areas(plot_range) ...
                                data_raw_Q3.test_3.pelvis.areas(plot_range) ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        plotNpairedData(nfig,...
                            [data_raw_Q3.test_16.time(plot_range) ...
                                data_raw_Q3.test_17.time(plot_range)...
                                data_raw_Q3.test_18.time(plot_range)],...
                            [data_raw_Q3.test_16.pelvis.areas(plot_range) ...
                                data_raw_Q3.test_17.pelvis.areas(plot_range) ...
                                data_raw_Q3.test_18.pelvis.areas(plot_range) ],...
                            '-.',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (s)','Acceleration (g)',false,figPath,...
                            figureFormat,AxisPlots);
        hold on;
        dim_ann = [0.65 0.1 0.3 0.3]; % [x y w h]
        str_ann = {'Solid lines = 133kg robot','Dotted lines = 60kg robot'};
        annotation('textbox',dim_ann,'String',str_ann,'FitBoxToText','on',...
                       'FontName','TimesNewRoman','FontSize',16);                
        if SAVE_PLOTS       
            set(gcf,'PaperPositionMode', 'auto');   % Required for exporting graphs
            saveas(nfig,strcat(figPath,figName),figureFormat);
        end
        hold off;
        %%
        % ======================= Setup B ========================== %
        % % % Robot Mass = 133 kg / impact at head
        minX = -1;
        maxX = 20;
        minY = 0;
        maxY = 200;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Impact-Q3-Head-Robot[133Kg]';
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range) ...
                                data_raw_Q3.test_6.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range) ],...
                            [data_raw_Q3.test_5.head.areas(plot_range) ...
                                data_raw_Q3.test_6.head.areas(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.head.areas(plot_range)],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);   
                        
                        
        
        hold off;
        minY = 0;
        maxY = 80;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Chest-Acceleration-Impact-Q3-Head-Robot[133Kg]';
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range) ...
                                data_raw_Q3.test_6.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range) ],...
                            [data_raw_Q3.test_5.thorax.areas(plot_range) ...
                                data_raw_Q3.test_6.thorax.areas(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.thorax.areas(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);   
        hold off;
        minY = 0;
        maxY = 30;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Pelvis-Acceleration-Impact-Q3-Head-Robot[133Kg]';
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_Q3.test_1.time>minX,1):...
                            find(data_raw_Q3.test_1.time>maxX,1);
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range) ...
                                data_raw_Q3.test_6.time(plot_range) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_7.time(plot_range) ],...
                            [data_raw_Q3.test_5.pelvis.areas(plot_range) ...
                                data_raw_Q3.test_6.pelvis.areas(plot_range)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_7.pelvis.areas(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);   
        hold off;
        
        
        hold off;
        minY = 0;
        maxY = 30;
        maxX = 50;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Pelvis-Acceleration-Impact-Q3-Legs-Robot[133Kg]';
        plegends = {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range8 = find(data_raw_Q3.test_7.time>minX,1):...
                            find(data_raw_Q3.test_7.time>maxX,1);
        plot_range9 = find(data_raw_Q3.test_8.time>minX,1):...
                            find(data_raw_Q3.test_8.time>maxX,1);
        plot_range10 = find(data_raw_Q3.test_9.time>minX,1):...
                            find(data_raw_Q3.test_9.time>maxX,1);
                        
        plotNpairedData(nfig,[data_raw_Q3.test_8.time(plot_range8) ...
                                data_raw_Q3.test_9.time(plot_range9) ...%                                 data_raw.test_3.time(plot_range) ...
                                data_raw_Q3.test_10.time(plot_range10) ],...
                            [data_raw_Q3.test_8.pelvis.areas(plot_range8) ...
                                data_raw_Q3.test_9.pelvis.areas(plot_range9)...%                                 data_raw.test_3.head.ay(plot_range)...
                                data_raw_Q3.test_10.pelvis.areas(plot_range10)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);   
        hold off;
        
        
        %% =========== Plotting Ground reaction Acceleration ======== %
        % ======================= Setup A ========================== %
        % % % Robot Mass = 133 kg / impact at chest
        minX = -10;
        maxX = 20;
        minY = 0;
        maxY = 600;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Ground Q3-Chest-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_1.time>groundTimes(1)+minX,1):...
                    find(data_raw_Q3.test_1.time>groundTimes(1)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_2.time>groundTimes(2)+minX,1):...
                    find(data_raw_Q3.test_2.time>groundTimes(2)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_3.time>groundTimes(3)+minX,1):...
                    find(data_raw_Q3.test_3.time>groundTimes(3)+maxX,1);
        plot_range4 = find(data_raw_Q3.test_4.time>groundTimes(4)+minX,1):...
                    find(data_raw_Q3.test_4.time>groundTimes(4)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_1.time(plot_range1)-data_raw_Q3.test_1.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_2.time(plot_range2)-data_raw_Q3.test_2.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_3.time(plot_range3)-data_raw_Q3.test_3.time(plot_range3((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_4.time(plot_range4)-data_raw_Q3.test_4.time(plot_range4((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_1.head.areas(plot_range1) ...
                                data_raw_Q3.test_2.head.areas(plot_range2)...
                                data_raw_Q3.test_3.head.areas(plot_range3)...
                                data_raw_Q3.test_4.head.areas(plot_range4)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)' '3.2 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
    
        % ======================= Setup A2 ========================== %
        % % % Robot Mass = 60 kg / impact at chest
        figName = 'Head-Acceleration-Ground Q3-Chest-Robot[60Kg]';
%         minX = -10;
%         maxX = 20;
%         minY = 0;
%         maxY = 600;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_16.time>groundTimes(16)+minX,1):...
                        find(data_raw_Q3.test_16.time>groundTimes(16)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_17.time>groundTimes(17)+minX,1):...
                        find(data_raw_Q3.test_17.time>groundTimes(17)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_18.time>groundTimes(18)+minX,1):...
                        find(data_raw_Q3.test_18.time>groundTimes(18)+maxX,1);
        plot_range4 = find(data_raw_Q3.test_19.time>groundTimes(19)+minX,1):...
                        find(data_raw_Q3.test_19.time>groundTimes(19)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_16.time(plot_range1)-data_raw_Q3.test_16.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_17.time(plot_range2)-data_raw_Q3.test_17.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_19.time(plot_range4)-data_raw_Q3.test_19.time(plot_range4((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_18.time(plot_range3)-data_raw_Q3.test_18.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_16.head.areas(plot_range1) ...
                                data_raw_Q3.test_17.head.areas(plot_range2)...
                                data_raw_Q3.test_19.head.areas(plot_range4)...
                                data_raw_Q3.test_18.head.areas(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.0 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
                        
        
%%      % ======================= Setup B ========================== %
        % ==== Dummy Q3 impact at the Head - [133kg carrier robot]=== %
        % ==== Dummy Q3 impact at the Legs (Tibia / fibia)-[133kg carrier robot] === %
%         minX = -10;
%         maxX = 20;
%         minY = 0;
%         maxY = 650;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Ground Q3-Head-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_5.time>groundTimes(5)+minX,1):...
                    find(data_raw_Q3.test_5.time>groundTimes(5)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_6.time>groundTimes(6)+minX,1):...
                    find(data_raw_Q3.test_6.time>groundTimes(6)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_7.time>groundTimes(7)+minX,1):...
                    find(data_raw_Q3.test_7.time>groundTimes(7)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range1)-data_raw_Q3.test_5.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_6.time(plot_range2)-data_raw_Q3.test_6.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_7.time(plot_range3)-data_raw_Q3.test_7.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_5.head.areas(plot_range1) ...
                                data_raw_Q3.test_6.head.areas(plot_range2)...
                                data_raw_Q3.test_7.head.areas(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
       
%%        % ======================= Setup C ========================== %
        % ==== Dummy Q3 impact at the Legs (Tibia / fibia)-[133kg carrier robot] === %
%         minX = -20;
%         maxX = 50;
%         minY = 0;
%         maxY = 650;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Ground Q3-Legs-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_8.time>groundTimes(8)+minX,1):...
                    find(data_raw_Q3.test_8.time>groundTimes(8)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_9.time>groundTimes(9)+minX,1):...
                    find(data_raw_Q3.test_9.time>groundTimes(9)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_10.time>groundTimes(10)+minX,1):...
                    find(data_raw_Q3.test_10.time>groundTimes(10)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_8.time(plot_range1)-data_raw_Q3.test_8.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_9.time(plot_range2)-data_raw_Q3.test_9.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_10.time(plot_range3)-data_raw_Q3.test_10.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_8.head.areas(plot_range1) ...
                                data_raw_Q3.test_9.head.areas(plot_range2)...
                                data_raw_Q3.test_10.head.areas(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);

        %% =========== Plotting Ground reaction Neck Forces ======== %
        % ======================= Setup A ========================== %
        % % % Robot Mass = 133 kg / impact at chest
        minX = -30;
        maxX = 60;
        minY = -700;
        maxY = 1200;
        AxisPlots = [minX maxX minY maxY];
        figName = 'NeckForces-Fz-Ground-Q3-Chest-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_1.time>groundTimes(1)+minX,1):...
                    find(data_raw_Q3.test_1.time>groundTimes(1)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_2.time>groundTimes(2)+minX,1):...
                    find(data_raw_Q3.test_2.time>groundTimes(2)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_3.time>groundTimes(3)+minX,1):...
                    find(data_raw_Q3.test_3.time>groundTimes(3)+maxX,1);
        plot_range4 = find(data_raw_Q3.test_4.time>groundTimes(4)+minX,1):...
                    find(data_raw_Q3.test_4.time>groundTimes(4)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_1.time(plot_range1)-data_raw_Q3.test_1.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_2.time(plot_range2)-data_raw_Q3.test_2.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_3.time(plot_range3)-data_raw_Q3.test_3.time(plot_range3((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_4.time(plot_range4)-data_raw_Q3.test_4.time(plot_range4((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_1.neck.Fz(plot_range1) ...
                                data_raw_Q3.test_2.neck.Fz(plot_range2)...
                                data_raw_Q3.test_3.neck.Fz(plot_range3)...
                                data_raw_Q3.test_4.neck.Fz(plot_range4)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)' '3.2 (m/s)'},...
                            'time (ms)','Tension/Extension Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
    
        % ======================= Setup A2 ========================== %
        % % % Robot Mass = 60 kg / impact at chest
        figName = 'NeckForces-Fz-Ground-Q3-Chest-Robot[60Kg]';
        minX = -30;
        maxX = 60;
        minY = -800;
        maxY = 600;
        AxisPlots = [minX maxX minY maxY];
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_16.time>groundTimes(16)+minX,1):...
                        find(data_raw_Q3.test_16.time>groundTimes(16)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_17.time>groundTimes(17)+minX,1):...
                        find(data_raw_Q3.test_17.time>groundTimes(17)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_18.time>groundTimes(18)+minX,1):...
                        find(data_raw_Q3.test_18.time>groundTimes(18)+maxX,1);
        plot_range4 = find(data_raw_Q3.test_19.time>groundTimes(19)+minX,1):...
                        find(data_raw_Q3.test_19.time>groundTimes(19)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_16.time(plot_range1)-data_raw_Q3.test_16.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_17.time(plot_range2)-data_raw_Q3.test_17.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_19.time(plot_range4)-data_raw_Q3.test_19.time(plot_range4((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_18.time(plot_range3)-data_raw_Q3.test_18.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_16.neck.Fz(plot_range1) ...
                                data_raw_Q3.test_17.neck.Fz(plot_range2)...
                                data_raw_Q3.test_19.neck.Fz(plot_range4)...
                                data_raw_Q3.test_18.neck.Fz(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.0 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Tension/Extension Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);  
                        
        % ======================= Setup B ========================== %
        % ==== Dummy Q3 impact at the Head - [133kg carrier robot]=== %
        % ==== Dummy Q3 impact at the Legs (Tibia / fibia)-[133kg carrier robot] === %
        minX = -30;
        maxX = 60;
        minY = -500;
        maxY = 1000;
        AxisPlots = [minX maxX minY maxY];
        figName = 'NeckForces-Fz-Ground-Q3-Head-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_5.time>groundTimes(5)+minX,1):...
                    find(data_raw_Q3.test_5.time>groundTimes(5)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_6.time>groundTimes(6)+minX,1):...
                    find(data_raw_Q3.test_6.time>groundTimes(6)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_7.time>groundTimes(7)+minX,1):...
                    find(data_raw_Q3.test_7.time>groundTimes(7)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_5.time(plot_range1)-data_raw_Q3.test_5.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_6.time(plot_range2)-data_raw_Q3.test_6.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_7.time(plot_range3)-data_raw_Q3.test_7.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_5.neck.Fz(plot_range1) ...
                                data_raw_Q3.test_6.neck.Fz(plot_range2)...
                                data_raw_Q3.test_7.neck.Fz(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Tension/Extension Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
       
        % ======================= Setup C ========================== %
        % ==== Dummy Q3 impact at the Legs (Tibia / fibia)-[133kg carrier robot] === %
        minX = -30;
        maxX = 60;
        minY = -1000;
        maxY = 500;
        AxisPlots = [minX maxX minY maxY];
        figName = 'NeckForces-Fz-Ground-Q3-Legs-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_Q3.test_8.time>groundTimes(8)+minX,1):...
                    find(data_raw_Q3.test_8.time>groundTimes(8)+maxX,1);
        plot_range2 = find(data_raw_Q3.test_9.time>groundTimes(9)+minX,1):...
                    find(data_raw_Q3.test_9.time>groundTimes(9)+maxX,1);
        plot_range3 = find(data_raw_Q3.test_10.time>groundTimes(10)+minX,1):...
                    find(data_raw_Q3.test_10.time>groundTimes(10)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_Q3.test_8.time(plot_range1)-data_raw_Q3.test_8.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_9.time(plot_range2)-data_raw_Q3.test_9.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_Q3.test_10.time(plot_range3)-data_raw_Q3.test_10.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_Q3.test_8.neck.Fz(plot_range1) ...
                                data_raw_Q3.test_9.neck.Fz(plot_range2)...
                                data_raw_Q3.test_10.neck.Fz(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Tension/Extension Forces (N)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);                
       
                        
        %% ======================= Setup D ========================== %
        % % % Robot Mass = 133 kg / impact at chest 
        % % Dummy H3 impact at the Legs (Tibia / fibia)
        
        % ============= Plotting Impact Forces H3 =====================%
        figName = 'Impact-H3_Legs-Robot[133Kg]';
        minTime = -1;
        maxTime = 200;
        minY = -10;
        maxY = 5000;
        AxisPlots = [minTime maxTime minY maxY];
        nfig = nfig +1;
        plot_range = find(data_raw_H3.test_11.time>minTime,1):find(data_raw_H3.test_11.time>maxTime,1);
        
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...s
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ...
                                ],...
                            [data_filtered.test_11.impact.Fx(plot_range) ...
                                data_filtered.test_12.impact.Fx(plot_range)...
                                data_filtered.test_13.impact.Fx(plot_range)...
                                data_filtered.test_14.impact.Fx(plot_range)...
                                data_filtered.test_15.impact.Fx(plot_range)...
                                ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)' '3.1 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Legs Impact Force (N)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);  
        %%
        % ============= Plotting Tibia Forces H3 =====================%
        % ---------------- Plotting Left Leg Forces ---------------- %
        plegends ={'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'};
        minTime = -10;
        maxTime = 1000;
        nfig = nfig +1;
        plot_range = find(data_raw_H3.test_11.time>minTime,1):...
                        find(data_raw_H3.test_11.time>maxTime,1);      
        
        figName = 'Tibia-loLFz-H3_Legs-Robot-[133Kg]';
        minY = -4000;
        maxY = 1000;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.loLFz(plot_range) ...
                                data_raw_H3.test_12.tibia.loLFz(plot_range)...
                                data_raw_H3.test_14.tibia.loLFz(plot_range)...
                                ],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Lower Tibia Proximal Force (N)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        
        nfig = nfig +1;
        figName = 'Tibia-loLFy-H3_Legs-Robot-[133Kg]';
        minY = -400;
        maxY = 600;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.loLFy(plot_range) ...
                                data_raw_H3.test_12.tibia.loLFy(plot_range)...
                                data_raw_H3.test_14.tibia.loLFy(plot_range)...
                                ],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Lower Tibia Lateral Force (N)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
       
        % -------- Moments ---------- %
        nfig = nfig +1;
        figName = 'Tibia-loLMx-H3_Legs-Robot-[133Kg]';
        minY = -150;
        maxY = 150;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.loLMx(plot_range) ...
                                data_raw_H3.test_12.tibia.loLMx(plot_range)...
                                data_raw_H3.test_14.tibia.loLMx(plot_range)...
                                ],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Lower Tibia Anerior Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
                        
        nfig = nfig +1;
        figName = 'Tibia-upLMx-H3_Legs-Robot-[133Kg]';
        minY = -150;
        maxY = 150;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.upLMx(plot_range) ...
                                data_raw_H3.test_12.tibia.upLMx(plot_range)...
                                data_raw_H3.test_14.tibia.upLMx(plot_range)...
                                ],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Upper Tibia Anerior Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        nfig = nfig +1;
        figName = 'Tibia-upLMy-H3_Legs-Robot-[133Kg]';
        minY = -150;
        maxY = 60;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                ],...
                            [data_raw_H3.test_11.tibia.upLMy(plot_range) ...
                                data_raw_H3.test_12.tibia.upLMy(plot_range)...
                                data_raw_H3.test_14.tibia.upLMy(plot_range)...
                                ],...
                            '-',figName,...
                            plegends,...
                            'time (ms)','Upper Tibia Lateral Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
	
        %% ---------------- Plotting Right Leg Forces ---------------- %
        minTime = -10;
        maxTime = 1000;
        nfig = nfig +1;
        plot_range = find(data_raw_H3.test_11.time>minTime,1):...
                        find(data_raw_H3.test_11.time>maxTime,1);      
        
        figName = 'Tibia-loRFz-H3_Legs-Robot-[133Kg]';
        minY = -1200;
        maxY = 500;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.loRFz(plot_range) ...
                                data_raw_H3.test_12.tibia.loRFz(plot_range)...
                                data_raw_H3.test_13.tibia.loRFz(plot_range)...
                                data_raw_H3.test_14.tibia.loRFz(plot_range)...
                                data_raw_H3.test_15.tibia.loRFz(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Lower Tibia Proximal Force (N)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        
        nfig = nfig +1;
        figName = 'Tibia-loRFy-H3_Legs-Robot-[133Kg]';
        minY = -2000;
        maxY = 1000;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.loRFy(plot_range) ...
                                data_raw_H3.test_12.tibia.loRFy(plot_range)...
                                data_raw_H3.test_13.tibia.loRFy(plot_range)...
                                data_raw_H3.test_14.tibia.loRFy(plot_range)...
                                data_raw_H3.test_15.tibia.loRFy(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Lower Tibia Lateral Force (N)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
       
        % -------- Moments ---------- %
        nfig = nfig +1;
        figName = 'Tibia-loRMx-H3_Legs-Robot-[133Kg]';
        minY = -200;
        maxY = 40;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.loRMx(plot_range) ...
                                data_raw_H3.test_12.tibia.loRMx(plot_range)...
                                data_raw_H3.test_13.tibia.loRMx(plot_range)...
                                data_raw_H3.test_14.tibia.loRMx(plot_range)...
                                data_raw_H3.test_15.tibia.loRMx(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Lower Tibia Anerior Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
                        
        nfig = nfig +1;
        figName = 'Tibia-upRMx-H3_Legs-Robot-[133Kg]';
        minY = -270;
        maxY = 80;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.upRMx(plot_range) ...
                                data_raw_H3.test_12.tibia.upRMx(plot_range)...
                                data_raw_H3.test_13.tibia.upRMx(plot_range)...
                                data_raw_H3.test_14.tibia.upRMx(plot_range)...
                                data_raw_H3.test_15.tibia.upRMx(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Upper Tibia Anerior Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
        nfig = nfig +1;
        figName = 'Tibia-upRMy-H3_Legs-Robot-[133Kg]';
        minY = -25;
        maxY = 80;
        AxisPlots = [minTime maxTime minY maxY];
        plotNpairedData(nfig,[data_filtered.test_11.time(plot_range) ...
                                data_filtered.test_12.time(plot_range) ...
                                data_filtered.test_13.time(plot_range) ...
                                data_filtered.test_14.time(plot_range) ...
                                data_filtered.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.tibia.upRMy(plot_range) ...
                                data_raw_H3.test_12.tibia.upRMy(plot_range)...
                                data_raw_H3.test_13.tibia.upRMy(plot_range)...
                                data_raw_H3.test_14.tibia.upRMy(plot_range)...
                                data_raw_H3.test_15.tibia.upRMy(plot_range)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Upper Tibia Lateral Moment (Nm)',...
                            SAVE_PLOTS,figPath,figureFormat,AxisPlots);
%%                        
        % ============= Plotting Head Acceleration H3 =====================%
        figName = 'Head-Acceleration-Impact-H3-Legs-Robot[133Kg]';
        minX = -10;
        maxX = 20;
        minY = 0;
        maxY = 10;
        AxisPlots = [minX maxX minY maxY];
        
        nfig = nfig +1;
%         plot_range = 1:find(data_raw.test_1.time>200,1);
        plot_range = find(data_raw_H3.test_11.time>minX,1):find(data_raw_H3.test_11.time>maxX,1);
        plotNpairedData(nfig,[data_raw_H3.test_11.time(plot_range) ...
                                data_raw_H3.test_12.time(plot_range) ...
                                data_raw_H3.test_13.time(plot_range) ...
                                data_raw_H3.test_14.time(plot_range) ...
                                data_raw_H3.test_15.time(plot_range) ],...
                            [data_raw_H3.test_11.head.areas(plot_range) ...
                                data_raw_H3.test_12.head.areas(plot_range)...
                                data_raw_H3.test_13.head.areas(plot_range)...
                                data_raw_H3.test_14.head.areas(plot_range)...
                                data_raw_H3.test_15.head.areas(plot_range)],...
                            '-',figName,...
                             {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)', '3.1 (m/s)','3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
        
        %% =========== Plotting Ground reaction to the head ==============%
        % ========== Plotting Head Acceleration - Ground H3 ==============%
        minX = -10;
        maxX = 20;
        minY = 0;
        maxY = 600;
        AxisPlots = [minX maxX minY maxY];
        figName = 'Head-Acceleration-Ground H3-Legs-Robot[133Kg]';
        nfig = nfig +1;
        plot_range1 = find(data_raw_H3.test_11.time>groundTimes(11)+minX,1):...
                    find(data_raw_H3.test_11.time>groundTimes(11)+maxX,1);
        plot_range2 = find(data_raw_H3.test_12.time>groundTimes(12)+minX,1):...
                    find(data_raw_H3.test_12.time>groundTimes(12)+maxX,1);
        plot_range3 = find(data_raw_H3.test_14.time>groundTimes(14)+minX,1):...
                    find(data_raw_H3.test_14.time>groundTimes(14)+maxX,1);
        
        plotNpairedData(nfig,[data_raw_H3.test_11.time(plot_range1)-data_raw_H3.test_11.time(plot_range1((-minX)*Freq/1000)) ...
                                data_raw_H3.test_12.time(plot_range2)-data_raw_H3.test_12.time(plot_range2((-minX)*Freq/1000)) ...
                                data_raw_H3.test_14.time(plot_range3)-data_raw_H3.test_15.time(plot_range3((-minX)*Freq/1000)) ],...
                            [data_raw_H3.test_11.head.areas(plot_range1) ...
                                data_raw_H3.test_12.head.areas(plot_range2)...
                                data_raw_H3.test_14.head.areas(plot_range3)],...
                            '-',figName,...
                            {'1.0 (m/s)' '1.5 (m/s)' '3.1 (m/s)'},...
                            'time (ms)','Acceleration (g)',SAVE_PLOTS,figPath,...
                            figureFormat,AxisPlots);
    
